---
title: "Homework 6"
author: "Sarah Lötscher"
date: "31 10 2022"
format:
  html:
    self-contained: true
---

## Exercise 1.b)
Simulate a random walk, starting at 0 where at each time step the position is either increased
by 1 with probability 1/2 or decreased by 1 otherwise. Simulate many walks for N = 10, N = 100
and N = 1000 steps. Compare the results to (2). Find the relationship between the means and
variances.

```{r}
#Parameters
N_values<-c(10,100,1000)
sample<-20000

```

```{r}
#Function
par(mfrow=c(1,length(N_values)))

for(N in N_values){
  RW <- N-2*rbinom(sample,N,0.5)
  dd<-table(RW)/sample/2
  plot(dd,ylab = "Freq",xlab = "Pos", main=N)

  cat("The mean for walks of N=",N,"is",mean(dd),"\n")
  cat("The variance for walks of N=",N,"is",var(RW),"\n")
  
  
  
}

```

## Exercise 3.c)
Compare your analytical results for the absorption times τ1,τ0, and τ ̄ with those from numerical simulations of the neutral WF-process. Use N = 100 individuals and initial frequencies of p0 = 0.5, as well as p0 = 1/N. Do 1,000 simulations each (or more) and remember to use a suitably
long simulation time.

```{r}
N<-100
traj<-1000
gen<-1000
ps<-c(0.5, 1/N)
```

```{r}
#Figure
par(mfrow=c(1,1))

for (p0 in c(0.5, 1 / N)) {
  #Initial values
  M<-matrix(0,traj,gen) 
  M[,1] <- t(rep(p0,traj))
  
  sum_fixation_time = 0
  num_fixation = 0
  
  sum_extinction_time = 0
  num_extinction = 0
  
  already_absorbed = rep(FALSE, traj)
  
  p = p0
  for (t in 2:gen){
    X <- rbinom(traj, N, p)
    p <- X / (N)
    M[,t]=p
    
    newly_fixated <- (X == N) & !already_absorbed
    num_fixation <- num_fixation + sum(newly_fixated)
    sum_fixation_time <- sum_fixation_time + t*sum(newly_fixated)
    
    newly_extinct <- (X == 0) & !already_absorbed
    num_extinction <- num_extinction + sum(newly_extinct)
    sum_extinction_time <- sum_extinction_time + t*sum(newly_extinct)
    
    already_absorbed <- already_absorbed | newly_fixated
    already_absorbed <- already_absorbed | newly_extinct
  }
  
  print("p:")
  print(p0)
  print("Expected fixation time:")
  print(sum_fixation_time / num_fixation)
  print("Expected extinction time:")
  print(sum_extinction_time / num_extinction)
  print("Expected absorbtion time:")
  print((sum_extinction_time + sum_fixation_time) / (num_extinction + num_fixation))
}
```